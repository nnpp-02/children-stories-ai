// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]
}

model Book {
  id                   String    @id @default(cuid())
  bookTitle            String
  bookCoverUrl         String?
  bookCoverDescription String?
  slug                 String    @unique
  numPages             Int       @default(0)
  status               String    @default("pending") // pending, completed, failed
  userId               String
  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  chapters             Chapter[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@index([bookTitle])
}

model Chapter {
  id               String   @id @default(cuid())
  subTitle         String
  textContent      String   @db.Text
  imageUrl         String?
  imageDescription String?
  page             String
  bookId           String
  book             Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([subTitle])
  @@index([bookId])
}
